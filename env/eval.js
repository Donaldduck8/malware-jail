util_log("Preparing sandbox to intercept eval() calls.");
_eval_calls = [];
if (typeof _orig_eval === 'undefined')
    _orig_eval = eval;
eval = function(s) {
    var _t = {};
    _t["orig"] = s;
    var ns = s.replace(/try/g,'').replace(/catch/g,'\r\nfunction _mycatch');
    _t["no_try_catch"] = ns;
    //  https://github.com/defconhaya proposal:
    ns = ns.replace(/function ([^ (]*)/g, "$1 = function");
    _t["save_funcs"] = ns;
    _eval_calls[_eval_calls.length] = _t;
    var _isStrict = (function() { return !this; })();
    util_log("Strict mode:", _isStrict);
    util_log("Calling eval() no.:", _eval_calls.length);
    return _orig_eval(ns);
}
