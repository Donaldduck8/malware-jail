_browser_documents = [];

window = new function() {
    this.id = id++;
    this._name = "window[" + this.id + "]";
    util_log("Created: " + this._name);
    //this.userAgent = "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; .NET CLR 2.7.58687; SLCC2; Media Center PC 5.0; Zune 3.4; Tablet PC 3.6; InfoPath.3)";
    this.userAgent = "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko";
    this.eval = eval;
    this.setInterval = function() {
        util_log(this._name + ".setInterval(" + Array.prototype.slice.call(arguments, 0).join(",") + ")");
        util_log(typeof arguments[0]);
        arguments[0].apply(this, Array.prototype.slice.call(arguments, 1));
    }

    this.clearInterval = function() {
        util_log(this._name + ".clearInterval(" + Array.prototype.slice.call(arguments, 0).join(",") + ")");
    }
    this.navigator = this;

}();

setInterval = window.setInterval.bind(window);
clearInterval = window.clearInterval.bind(window);

navigator = window;

location = {
    href: "http://example.com/"
}

document = {
    _name : "document",
    _content : "",
    _elements : {},
    getElementsByTagName: function(n) {
        util_log(this._name + ".getElementsByTagName("+n+")");
        return new Element(n);
    },
    getElementById: function(n) {
        util_log(this._name + ".getElementById("+n+")");
        if (n in this._elements)
            return this._elements[n];
        else
            return new Element(n);
    },
    createElement: function(n) {
        util_log(this._name + ".createElement("+n+")");
        return new Element(n);
    },
    createTextNode: function(n) {
        util_log(this._name + ".createTextNode("+n+")");
        return new Element(n);
    },
    write: function(c) {
        util_log(this._name + ".write(content) " + c.length + " bytes");
        _content = c;
        _browser_documents[_browser_documents.length] = c;
    },
    _addElementById: function(id, content) {
        this._elements[id] = new Element(id);
        this._elements[id].innerHTML = content;
    },
    _location : location,
    _body : "body",

}

Object.defineProperty(document, "location", {
    get: function() {
        util_log("document.location.get()");
        return this._location;
    },
    set: function(n) {
        util_log("document.location.set("+n+")");
        this._location = n;
    }
})
Object.defineProperty(document, "body", {
    get: function() {
        util_log("document.body.get()");
        return this._body;
    },
    set: function(n) {
        util_log("document.body.set("+n+")");
        this._body = n;
    }
})
